<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="Lecture.Evaluation.dao.EvaluationDao">

  <resultMap type="Lecture.Evaluation.domain.EvaluationDTO" id="EvaluationMap">
    <id column="evaluationID"   property="evaluationID"/>
    <result column="userID"  property="userID"/>
    <result column="lectureName"    property="lectureName"/>
    <result column="professorName" property="professorName"/>
    <result column="lectureYear" property="lectureYear"/>
    <result column="semesterDivide" property="semesterDivide"/>
    <result column="lectureDivide" property="lectureDivide"/>
    <result column="evaluationTitle" property="evaluationTitle"/>
    <result column="evaluationContent" property="evaluationContent"/>
    <result column="totalScore" property="totalScore"/>
    <result column="creditScore" property="creditScore"/>
    <result column="characterScore" property="characterScore"/>
    <result column="lectureScore" property="lectureScore"/>
    <result column="likeCount" property="likeCount"/>
    
    
  </resultMap>
  
  <select id="getList" resultMap="EvaluationMap">
    SELECT 
    *
      
    FROM 
      EVALUATION
    WHERE lectureDivide 
    <include refid="search"></include>
						
     LIMIT 0 ,6
  </select>
  <select id="listSearchCount" resultType="int">
    SELECT
        count(evaluationID)
    FROM
        EVALUATION
    WHERE
        evaluationID > 0
    <include refid="search"></include>        
    </select>
  
  <sql id="search">
  <if test="searchType !=null">
  	<if test="searchType=='최신순'.toString()">
  	Like CONCAT ('%',#{lectureDivide},'%') AND
  	CONCAT(lectureName,professorName,evaluationTitle,evaluationContent)
  	LIKE CONCAT('%',#{search},'%')
  	ORDER BY evaluationID DESC
  	
  	</if>
  	<if test="searchType=='추천순'.toString()">
  	Like CONCAT('%',#{lectureDivide},'%') AND
  	CONCAT(lectureName,professorName,evaluationTitle,evaluationContent)
  	LIKE CONCAT('%',#{search},'%')
  	ORDER BY likeCount DESC
  	
  	</if>
  
  </if>
  
  </sql>
  <insert id="insert" parameterType="EvaluationDTO">
    INSERT INTO EVALUATION(
    evaluationID,
    userID,
    lectureName,
   	professorName,
   	lectureYear,
   	 semesterDivide,
   	 lectureDivide,
   	 evaluationTitle,
   	 evaluationContent,
   	 totalScore,
   	 creditScore,
   	 characterScore,
   	 lectureScore,
   	 likeCount
   	 ) 
    values(
   #{evaluationID ,jdbcType=INTEGER},
    #{userID},  
     #{lectureName},
   	#{professorName},
   	#{lectureYear},
   	 #{semesterDivide},
   	#{lectureDivide},
   	 #{evaluationTitle},
   	#{evaluationContent},
   	 #{totalScore},
   	 #{creditScore},
   	#{characterScore},
   	#{lectureScore},
   '0')
  </insert>
  
  <select id="getUserID" resultMap="EvaluationMap" parameterType="int">
    SELECT userID
     FROM EVALUATION 
     WHERE evaluationID =#{evaluationID}
    
   
  </select>
  
  <update id="like" parameterType="int">
    update evaluation set
      likeCount=likeCount+1
    where evaluationID=#{evaluationID}
  </update>
  
  <delete id="delete" parameterType="int">
    DELETE FROM EVALUATION 
    WHERE evaluationID = #{evaluationID}
   
  </delete>
</mapper>
